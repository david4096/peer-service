swagger: '2.0'
info:
  title: Peer Service
  version: "0.1"
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
basePath: /peers
paths:
  /announce:
    post:
      summary: |-
        Allows a client to notify a service of a potential peer.
        Services are expected to log these requests and implement
        policies for adding peers to their peer lists as desired.
      description: |-
        The AnnouncePeerResponse only notifies the requester whether
        the request was valid. To find if their announce request
        has been accepted they must make a `ListPeersRequest`.
        `POST /peers/announce` must accept a JSON version of
        `AnnouncePeerRequest` as the post body and will return a JSON
        version of `AnnouncePeerResponse`.
      operationId: AnnouncePeer
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/AnnouncePeerResponse'
      tags:
        - PeerService
  /info:
    get:
      summary: |-
        Provides peers with a way to identify the protocol version
        of a peer. Other information describing the service can
        be included in the `info` field of the `GetInfoResponse`.
      description: |-
        `GET /info` will return a JSON version of `GetInfoResponse`.
        and does not require any parameters.
      operationId: Info
      responses:
        '200':
          description: 'Information about the service should include the version.'
          schema:
            $ref: '#/definitions/GetInfoResponse'
      tags:
        - PeerService
  /peers:
    get:
      summary: |-
        Gets a list of `Peer` messages that are being managed by the
        service. If the peer list becomes very long it is spread
        across multiple pages.
      description: |-
        `POST /peers/list` must accept a JSON version of
        `ListPeersRequest` as the post body and will return a JSON
        version of `ListPeersResponse`.
      operationId: ListPeers
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ListPeersResponse'
      parameters:
        - name: page_size
          in: query
          required: false
          type: integer
        - name: page_token
          in: query
          required: false
          type: string
      tags:
        - PeerService
definitions:
  AnnouncePeerResponse:
    type: object
    properties:
      success:
        type: boolean
        format: boolean
        description: |-
          This message notifies the client whether the AnnouncePeerRequest
          was well formed.
      attributes:
        $ref: '#/definitions/Attributes'
    description: This is the response from `POST /peers/announce`.
  Attributes:
    type: object
    additionalProperties: true
    description: This is the response from `GET /info`.
  ListPeersResponse:
    type: object
    properties:
      peers:
        type: array
        items:
          $ref: '#/definitions/Peer'
        description: |-
          The list of `Peer` messages presented by the server. They
          are not expected in any particular order.
      next_page_token:
        type: string
        description: |-
          The continuation token, which is used to page through large result sets.
          Provide this value in a subsequent request to return the next page of
          results. This field will be empty if there aren't any additional results.
    description: |-
      This is the response from `POST /peers/list` expressed as
      JSON.
  Peer:
    type: object
    properties:
      url:
        type: string
        description: |-
          This is the base URL where the service can be accessed from. It is
          expected to be fully formed and to include the port number if the
          port in use is not standard (http 80, https 443).
          
          Provide the full endpoint of the peer service "https://example.org:8000/peers". 
          Trailing slashes should be ignored.
      attributes:
        $ref: '#/definitions/Attributes'
    description: |-
      Peers allow clients to represent services to each other so
      ad-hoc networks can be easily constructed.
  GetInfoResponse:
    type: object
    properties:
      protocol_version:
        type: string
        description: |-
          The version of the protocol is a reserved key in the info response and should 
          be usable by clients to generate requests.
      attributes:
        $ref: '#/definitions/Attributes'
    description: |-
      Clients can learn general information about the peer service by accessing its 
      Info response.
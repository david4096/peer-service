swagger: '2.0'
info:
  title: Peer Service
  version: 0.1
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
basePath: /ga4gh/peers/v1
paths:
  /announce:
    post:
      summary: |-
        Allows a client to notify a service of a potential peer.
        Services are expected to log these requests and implement
        policies for adding peers to their peer lists as desired.
      description: |-
        The AnnouncePeerResponse only notifies the requester whether
        the request was valid. To find if their announce request
        has been accepted they must make a `ListPeersRequest`.
        `POST /peers/announce` must accept a JSON version of
        `AnnouncePeerRequest` as the post body and will return a JSON
        version of `AnnouncePeerResponse`.
      operationId: AnnouncePeer
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ga4ghAnnouncePeerResponse'
      tags:
        - PeerService
  /info:
    get:
      summary: |-
        Provides peers with a way to identify the protocol version
        of a peer. Other information describing the service can
        be included in the `info` field of the `GetInfoResponse`.
      description: |-
        `GET /info` will return a JSON version of `GetInfoResponse`.
        and does not require any parameters.
      operationId: Info
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ga4ghGetInfoResponse'
      tags:
        - PeerService
  /peers/list:
    post:
      summary: |-
        Gets a list of `Peer` messages that are being managed by the
        service. If the peer list becomes very long it is spread
        across multiple pages.
      description: |-
        `POST /peers/list` must accept a JSON version of
        `ListPeersRequest` as the post body and will return a JSON
        version of `ListPeersResponse`.
      operationId: ListPeers
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ga4ghListPeersResponse'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ga4ghListPeersRequest'
      tags:
        - PeerService
definitions:
  ga4ghAnalysis:
    type: object
    properties:
      id:
        type: string
        description: |-
          Formats of id | name | description | accessions are described in the
          documentation on general attributes and formats.
      name:
        type: string
      description:
        type: string
      created:
        type: string
        description: 'The time at which this record was created, in ISO 8601 format.'
      updated:
        type: string
        description: 'The time at which this record was last updated, in ISO 8601 format.'
      type:
        type: string
        description: The type of analysis.
      software:
        type: array
        items:
          type: string
        description: The software run to generate this analysis.
      attributes:
        $ref: '#/definitions/ga4ghAttributes'
        description: A map of additional analysis information.
    description: |-
      An analysis contains an interpretation of one or several experiments. (e.g.
      SNVs, copy number variations, methylation status) together with information
      about the methodology used.
  ga4ghAnnouncePeerResponse:
    type: object
    properties:
      success:
        type: boolean
        format: boolean
        description: |-
          This message notifies the client whether the AnnouncePeerRequest
          was well formed.
      attributes:
        $ref: '#/definitions/ga4ghAttributes'
        description: |-
          Other information regarding an AnnouncePeerRequest can be sent in
          the attributes field.
    description: This is the response from `POST /peers/announce`.
  ga4ghAttributeValue:
    type: object
    properties:
      string_value:
        type: string
      int64_value:
        type: string
        format: int64
      int32_value:
        type: integer
        format: int32
      bool_value:
        type: boolean
        format: boolean
      double_value:
        type: number
        format: double
      external_identifier:
        $ref: '#/definitions/ga4ghExternalIdentifier'
      ontology_term:
        $ref: '#/definitions/ga4ghOntologyTerm'
      experiment:
        $ref: '#/definitions/ga4ghExperiment'
      program:
        $ref: '#/definitions/ga4ghProgram'
      analysis:
        $ref: '#/definitions/ga4ghAnalysis'
      null_value:
        $ref: '#/definitions/ga4ghNullValue'
      attributes:
        $ref: '#/definitions/ga4ghAttributes'
      attribute_list:
        $ref: '#/definitions/ga4ghAttributeValueList'
    description: |-
      Type defining a collection of attributes associated with various protocol
      records. Each attribute is a name that maps to an array of one or more
      values. Values are chosen from both internal protobuf types and GA4GH.
       Values should be split into array elements instead of using a separator
      syntax that needs to parsed.
  ga4ghAttributeValueList:
    type: object
    properties:
      values:
        type: array
        items:
          $ref: '#/definitions/ga4ghAttributeValue'
  ga4ghAttributes:
    type: object
    properties:
      attr:
        type: object
        additionalProperties:
          $ref: '#/definitions/ga4ghAttributeValueList'
  ga4ghExperiment:
    type: object
    properties:
      id:
        type: string
        title: The experiment ID
      name:
        type: string
        description: The name of the experiment.
      description:
        type: string
        description: A description of the experiment.
      message_create_time:
        type: string
        title: |-
          The time at which this message was created.
          Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
      message_update_time:
        type: string
        title: |-
          The time at which this message was last updated.
          Format: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)
      run_time:
        type: string
        title: |-
          The time at which this experiment was performed.
          Granularity here is variable (e.g. date only).
          Format: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)
      molecule:
        type: string
        title: 'The molecule examined in this experiment. (e.g. genomics DNA, total RNA)'
      strategy:
        type: string
        title: |-
          The experiment technique or strategy applied to the sample.
          (e.g. whole genome sequencing, RNA-seq, RIP-seq)
      selection:
        type: string
        title: |-
          The method used to enrich the target. (e.g. immunoprecipitation, size
          fractionation, MNase digestion)
      library:
        type: string
        description: The name of the library used as part of this experiment.
      library_layout:
        type: string
        description: The configuration of sequenced reads. (e.g. Single or Paired).
      instrument_model:
        type: string
        description: |-
          The instrument model used as part of this experiment.
          This maps to sequencing technology in BAM.
      instrument_data_file:
        type: string
        title: |-
          The data file generated by the instrument.
          TODO: This isn't actually a file is it?
          Should this be `instrumentData` instead?
      sequencing_center:
        type: string
        description: The sequencing center used as part of this experiment.
      platform_unit:
        type: string
        description: |-
          The platform unit used as part of this experiment. This is a
          flowcell-barcode
          or slide unique identifier.
      attributes:
        $ref: '#/definitions/ga4ghAttributes'
        description: A map of additional experiment information.
    description: An experimental preparation of a sample.
  ga4ghExternalIdentifier:
    type: object
    properties:
      database:
        type: string
        description: 'The source of the identifier, e.g. `Ensembl`.'
      identifier:
        type: string
        description: 'The ID defined by the external database, e.g. `ENST00000000000`.'
      version:
        type: string
        description: 'The version of the object or the database, e.g. `78`.'
    title: Identifier from a public database
  ga4ghGetInfoResponse:
    type: object
    properties:
      protocol_version:
        type: string
        description: |-
          The string of the protocol version offered by the service. For
          example, "0.6.0a10".
      attributes:
        $ref: '#/definitions/ga4ghAttributes'
        description: A map of additional information about the service can be included.
    description: This is the response from `GET /info`.
  ga4ghListPeersRequest:
    type: object
    properties:
      page_size:
        type: integer
        format: int32
        description: |-
          Specifies the maximum number of results to return in a single page. If
          unspecified, a system default will be used.
      page_token:
        type: string
        description: |-
          The continuation token, which is used to page through large result sets.
          To get the next page of results, set this parameter to the value of
          `next_page_token` from the previous response.
    description: This request maps to the body of `POST /peers/list`.
  ga4ghListPeersResponse:
    type: object
    properties:
      peers:
        type: array
        items:
          $ref: '#/definitions/ga4ghPeer'
        description: |-
          The list of `Peer` messages presented by the server. They
          are not expected in any particular order.
      next_page_token:
        type: string
        description: |-
          The continuation token, which is used to page through large result sets.
          Provide this value in a subsequent request to return the next page of
          results. This field will be empty if there aren't any additional results.
    description: |-
      This is the response from `POST /peers/list` expressed as
      JSON.
  ga4ghNullValue:
    type: string
    enum:
      - NULL_VALUE
    default: NULL_VALUE
    description: ' - NULL_VALUE: Null value.'
  ga4ghOntologyTerm:
    type: object
    properties:
      term_id:
        type: string
        description: |-
          Ontology term identifier - the CURIE for an ontology term. It
          differs from the standard GA4GH schema's :ref:`id <apidesign_object_ids>`
          in that it is a CURIE pointing to an information resource outside of the
          scope of the schema or its resource implementation.
      term:
        type: string
        description: Ontology term - the label of the ontology term the termId is pointing to.
    title: |-
      An ontology term describing an attribute. (e.g. the phenotype attribute
      'polydactyly' from HPO)
  ga4ghPeer:
    type: object
    properties:
      url:
        type: string
        description: |-
          This is the base URL where the service can be accessed from. It is
          expected to be fully formed and to include the port number if the
          port in use is not standard (http 80, https 443).

          For example, the peer at 1kgenomes would appear as:
            http://1kgenomes.ga4gh.org

          Trailing slashes should be ignored when constructing client
          requests based on this peer, and so shouldn't be included.

          This example shows a peer that has specified both a base path
          and a port.
            http://myapp.mycloudservice.com:8080/data/ga4gh
      attributes:
        $ref: '#/definitions/ga4ghAttributes'
        description: A map of additional information about the service can be included.
    description: |-
      Peers allow clients to represent services to each other so
      ad-hoc networks can be easily constructed.
  ga4ghProgram:
    type: object
    properties:
      command_line:
        type: string
        description: The command line used to run this program.
      id:
        type: string
        description: The user specified ID of the program.
      name:
        type: string
        description: The name of the program.
      prev_program_id:
        type: string
        description: The ID of the program run before this one.
      version:
        type: string
        description: The version of the program run.
    description: A Program describes software used in data processing or analysis.

